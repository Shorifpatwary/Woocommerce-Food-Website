$colorList: (
	white: #fff,
	yellow: #ffff00,
	green: #008000,
);

@mixin color-variable-generator(
	$colorName: white,
	$colorValue: #fff,
	$colorMap: $colorList,
	$def: "!default"
) {
	$dollar-sign: "$";
	@each $colorName, $colorValue in $colorMap {
		#{$dollar-sign}#{$colorName}: $colorValue
			#{$def}; // don't use this line . use instead of $colorName-3 variable .
		#{$dollar-sign}#{$colorName}-1: lighten($colorValue, 30%) #{$def};
		#{$dollar-sign}#{$colorName}-2: lighten($colorValue, 15%) #{$def};
		#{$dollar-sign}#{$colorName}-3: $colorValue #{$def};
		#{$dollar-sign}#{$colorName}-4: darken($colorValue, 15%) #{$def};
		#{$dollar-sign}#{$colorName}-5: darken($colorValue, 30%) #{$def};
	}
}
// @include color-variable-generator($colorList) ;// use example

// responsive breakpoints columns creator mixin
$breakpoints: (
	bp-1: 1400,
	// bp = breakpoint
	bp-3: 992,
	bp-5: 576,
);
@mixin column-divide-with-breakpoints(
	$map: $breakpoints,
	$totalColumn: 12,
	$widthUnite: "%"
) {
	@each $Breakpoints, $BreakpointsValue in $map {
		@if $BreakpointsValue > 1200 {
			$style-direction: min;
			$BreakpointsValue: 992;
		} @else {
			$style-direction: max;
		}
		@media screen and  (#{$style-direction}-width: #{$BreakpointsValue}) {
			@for $i from $totalColumn through 1 {
				.col__#{$Breakpoints}-#{$i} {
					flex-grow: 1; // bootstrap policy >> flex: 0 0 auto; with width property .
					// 100 / 12 ($totalColumns) =  8.33333333333
					flex-basis: 8.33333333333 * #{$i}#{$widthUnite};
				}
			}
		}
	}
}
/* use example */
// @include column-divide-with-breakpoints()

// responsive without breakpoints columns creator mixin

@mixin column-divide-without-breakpoints($totalColumn: 12, $widthUnite: "%") {
	@for $i from $totalColumn through 1 {
		.col__#{$i} {
			flex-grow: 1; // bootstrap policy >> flex: 0 0 auto; with width property .
			// 100 / 12 ($totalColumns) =  8.33333333333
			flex-basis: 8.33333333333 *#{$i}#{$widthUnite};
		}
	}
}

/* use example */
// @include column-divide-without-breakpoints()
